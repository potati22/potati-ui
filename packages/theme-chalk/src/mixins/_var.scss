@use 'sass:map';

@use '../common/var' as *;
@use 'function' as *;

// 参数：(('color', 'yellow', 'light-1'), #000)
// 返回值：--pot-color-yellow-light-1： #000
@mixin set-css-var-value($namelist, $value) {
  #{joinVarName($namelist)}: #{$value};
}

// 将 全局颜色变量$ 变为 var，参数：('black')，混入：
// --pot-color-black： #000
// --pot-color-black-light-1： #001
@mixin set-css-var-color($type) {
  @each $key, $value in map.get($colors, $type) {
    @if $key == 'default' {
      @include set-css-var-value(('color', $type), $value);
    } @else {
      @include set-css-var-value(('color', $type, $key), $value);
    }
  }
}

// 将 组件变量$ 变为 var, 参数：('switch', $switch)，混入：
// --pot-swith-width: 40px
// --pot-switch-core-color: getCssVar('color', 'white', '') ...
@mixin set-component-css-var($name, $variables) {
  @each $key, $value in $variables {
    @include set-css-var-value(($name, $key), $value);
  }
}

// 关联 组件变量 和 全局变量
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --el-button-text-color: var(--el-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
